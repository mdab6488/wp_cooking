services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 1G
          
  db:
    image: mysql:8.4
    restart: always
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: abcooking
      MYSQL_USER: mdab6488
      MYSQL_PASSWORD: VprDxn1hpahbwJ
      MYSQL_ROOT_PASSWORD: rootpassword 
    volumes:
      - db:/var/lib/mysql
      - ./docker/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      timeout: 5s
      retries: 10
      interval: 5s
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
    tmpfs:
      - /tmp
  
  wordpress:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wordpress
    restart: always
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: mdab6488
      WORDPRESS_DB_PASSWORD: VprDxn1hpahbwJ
      WORDPRESS_DB_NAME: abcooking
      APACHE_RUN_USER: www-data
      APACHE_RUN_GROUP: www-data
      WORDPRESS_DB_SSL: "false"
      MYSQL_CLIENT_FLAGS: "0"
      # Add startup delay
      WORDPRESS_STARTUP_DELAY: "30"
      # Add database connection retry logic
      WORDPRESS_DB_CONNECT_RETRIES: 10
      WORDPRESS_DB_CONNECT_TIMEOUT: 30
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_MEMORY_LIMIT', '2000M');
        define('WP_MAX_MEMORY_LIMIT', '2000M');
        define('FS_METHOD', 'direct');
        define('CONCATENATE_SCRIPTS', false);
        define('COMPRESS_SCRIPTS', false);
        define('COMPRESS_CSS', false);
        define('WP_CACHE', true);
        // Redis configuration
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_REDIS_TIMEOUT', 1);
        define('WP_REDIS_READ_TIMEOUT', 1);
        define('WP_REDIS_DATABASE', 0);
        // Elementor-specific settings
        define('ELEMENTOR_SAFE_MODE', false);
        define('ELEMENTOR_DISABLE_ADMIN_NOTICES', false);
        // Security settings
        define('DISALLOW_FILE_EDIT', false);
        define('DISALLOW_FILE_MODS', false);
        // Debug settings (disable in production)
        define('WP_DEBUG', false);
        define('WP_DEBUG_LOG', false);
        define('WP_DEBUG_DISPLAY', false);
        define('SCRIPT_DEBUG', false);
        // Disable SSL verification for MySQL
        define('MYSQL_CLIENT_FLAGS', 0);
    volumes:
      - wordpress_core:/var/www/html
      - ./docker/php.ini:/usr/local/etc/php/conf.d/custom-php.ini:ro
      - ./wp-content/themes:/var/www/html/wp-content/themes
      - ./wp-content/plugins:/var/www/html/wp-content/plugins:rw,Z
      - ./wp-content/uploads:/var/www/html/wp-content/uploads
      - ./wp-content/ai1wm-backups:/var/www/html/wp-content/ai1wm-backups
      - opcache:/var/www/.opcache
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/wp-admin/install.php || exit 0"]  # Custom health check
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 4G
    tmpfs:
      - /var/www/html/wp-content/cache:rw,noexec,nosuid,size=1G
      - /tmp:rw,noexec,nosuid,size=500m
      
volumes:
  wordpress_core:
  db:
  opcache:
  redis: